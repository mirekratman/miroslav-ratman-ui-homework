[
  {
    "id": "kds-team.ex-2performant",
    "vendor": {
      "id": "kds-team",
      "name": "KDS Team",
      "address": "Keboola Global\n(Vancouver, London, Prague, Chicago)",
      "email": "component.factory@keboola.com",
      "type": "keboola"
    },
    "version": 60,
    "name": "2Performant",
    "type": "extractor",
    "shortDescription": "2perfomant service tracks commissions and affiliates.",
    "longDescription": "# 2Performant Affiliate Extractor\n\nThe 2Performant extractor allows to download all commissions and their transactions.\n\nTo successfully use the extractor, a username and password used to access [network.2performant.com](https://network.2performant.com/) is needed.\n\n## Configuration\n\nA configuration of 3 mandatory parameters is required. A sample configuration of the component can be found in [component's repository](https://bitbucket.org/kds_consulting_team/kds-team.ex-2performant/src/master/component_config/sample-config/).\n\n- username (`username`) - a username used to login to 2performant;\n- password (`#password`) - a password associated with username;\n- month delta (`monthsBack`) - a positive integer marking the amount of months for which to download commissions;\n- incremental load (`incremental`) - a boolean marking, whether incremental load should be used.\n\n## Output\n\nA table with commissions returned by the API. Table is loaded incrementally with column `id` used as primary key.",
    "licenseUrl": null,
    "documentationUrl": "https://bitbucket.org/kds_consulting_team/kds-team.ex-2performant/src/master/README.md",
    "sourceCodeUrl": "https://bitbucket.org/kds_consulting_team/kds-team.ex-2performant/src/master/",
    "requiredMemory": null,
    "processTimeout": null,
    "features": [],
    "encryption": false,
    "network": "bridge",
    "defaultBucket": true,
    "defaultBucketStage": "in",
    "forwardToken": false,
    "forwardTokenDetails": false,
    "injectEnvironment": false,
    "complexity": null,
    "category": null,
    "categories": ["Advertisement"],
    "dataTypeSupport": "none",
    "allowedProcessorPosition": "any",
    "cpuShares": null,
    "uiOptions": ["genericDockerUI"],
    "imageParameters": {},
    "stackParameters": {},
    "testConfiguration": null,
    "configurationSchema": {
      "type": "object",
      "title": "Parameters",
      "required": ["#password", "username", "monthsBack", "incremental"],
      "properties": {
        "username": {
          "type": "string",
          "title": "Username",
          "default": "",
          "minLength": 1,
          "description": "User name used to log in to <a href='https://network.2performant.com/'>network.2performant.com</a>.",
          "propertyOrder": 100
        },
        "#password": {
          "type": "string",
          "title": "Password",
          "format": "password",
          "minLength": 1,
          "description": "User password used to log in to <a href='https://network.2performant.com/'>network.2performant.com</a>.",
          "propertyOrder": 200
        },
        "monthsBack": {
          "type": "integer",
          "title": "Month delta",
          "default": 4,
          "maximum": 48,
          "minimum": 1,
          "description": "The amount of months, including this one, for which to download the data. Functionality is as follows: <ul><li>1 - downloads data for current month,</li><li>2 - downloads data for current and previous month,</li><li>3 - downloads data for this, previous and month prior to that,</li><li>4 - etc.</li>",
          "propertyOrder": 300
        },
        "incremental": {
          "type": "boolean",
          "title": "Incremental load",
          "default": true,
          "description": "Use incremental load to storage.",
          "propertyOrder": 400
        }
      }
    },
    "configurationRowSchema": null,
    "createConfigurationRowSchema": null,
    "configurationDescription": "#### Input\n\nA configuration of 3 mandatory parameters is required. A sample configuration of the component can be found in [component's repository](https://bitbucket.org/kds_consulting_team/kds-team.ex-2performant/src/master/component_config/sample-config/).\n\n- username (`username`) - a username used to login to 2performant;\n- password (`#password`) - a password associated with username;\n- month delta (`monthsBack`) - a positive integer marking the amount of months for which to download commissions;\n- incremental load (`incremental`) - a boolean marking, whether incremental load should be used.\n\n#### Output\n\nA table with commissions returned by the API. Table is loaded incrementally with column `id` used as primary key.",
    "configurationFormat": "json",
    "emptyConfiguration": null,
    "emptyConfigurationRow": null,
    "actions": [],
    "fees": false,
    "limits": null,
    "logger": "gelf",
    "loggerConfiguration": null,
    "stagingStorageInput": "local",
    "stagingStorageOutput": "local",
    "isDeprecated": false,
    "expiredOn": null,
    "replacementApp": null,
    "isPublic": true,
    "isPublished": true,
    "publishedVersion": 60,
    "uri": "docker/kds-team.ex-2performant",
    "repository": {
      "type": "ecr",
      "uri": "147946154733.dkr.ecr.us-east-1.amazonaws.com/developer-portal-v2/kds-team.ex-2performant",
      "tag": "0.1.5",
      "options": {},
      "digest": "sha256:1e4d0a228fb7ffd74e7726f4f27b37f2f4ee5c6363a4be92cb4499e699576cb6"
    },
    "publishingStatus": "public",
    "icon": {
      "32": "https://ui.keboola-assets.com/developer-portal/icons/kds-team.ex-2performant/32/1623156530892.png",
      "64": "https://ui.keboola-assets.com/developer-portal/icons/kds-team.ex-2performant/64/1623156530892.png",
      "128": null
    }
  },
  {
    "id": "kds-team.ex-activecampaign",
    "vendor": {
      "id": "kds-team",
      "name": "KDS Team",
      "address": "Keboola Global\n(Vancouver, London, Prague, Chicago)",
      "email": "component.factory@keboola.com",
      "type": "keboola"
    },
    "version": 29,
    "name": "ActiveCampaign",
    "type": "extractor",
    "shortDescription": "ActiveCampaign is a CRM and Marketing Automation tool",
    "longDescription": "This component uses the ActiveCampaign API v3 to import the following data from ActiveCampaign:\n\n**Contacts**\n\n**Accounts**\n\n**Deals**\n\n**Campaigns**\n\n**Messages**\n\n**Automations**\n\nTo configure this extractor, you need to have a working ActiveCampaign **account**, and\n**API token**.\n\nData is always imported as full load due to the fact that record states may be changing over time.",
    "licenseUrl": "https://github.com/keboola/kbc-ui-templates/blob/master/resources/kds-team.ex-activecampaign/templates/LICENSE",
    "documentationUrl": "https://github.com/keboola/kbc-ui-templates/tree/master/resources/kds-team.ex-activecampaign/templates/readme.md",
    "sourceCodeUrl": "https://github.com/keboola/kbc-ui-templates/tree/master/resources/kds-team.ex-activecampaign/",
    "requiredMemory": null,
    "processTimeout": 43200,
    "features": [],
    "encryption": false,
    "network": "bridge",
    "defaultBucket": true,
    "defaultBucketStage": "in",
    "forwardToken": false,
    "forwardTokenDetails": false,
    "injectEnvironment": false,
    "complexity": null,
    "category": null,
    "categories": ["Advertisement"],
    "dataTypeSupport": "none",
    "allowedProcessorPosition": "any",
    "cpuShares": null,
    "uiOptions": ["genericTemplatesUI"],
    "imageParameters": {},
    "stackParameters": {},
    "testConfiguration": null,
    "configurationSchema": {
      "type": "object",
      "title": "Parameters",
      "required": ["config"],
      "properties": {
        "config": {
          "type": "object",
          "title": "Authorization",
          "required": [
            "#apiKey",
            "accountName",
            "incrementalOutput",
            "updated_since"
          ],
          "properties": {
            "#apiKey": {
              "type": "string",
              "title": "API Token",
              "format": "password",
              "required": true,
              "minLength": 10,
              "propertyOrder": 1
            },
            "accountName": {
              "type": "string",
              "title": "Account Name",
              "required": true,
              "minLength": 4,
              "description": "Provide Account name from your Base URL of ActiveCampaign API - ex. https://ACCOUNT_NAME.api-us1.com/api/3/",
              "propertyOrder": 2
            },
            "updated_since": {
              "type": "string",
              "title": "Updated since",
              "default": "",
              "description": "Fetch only records updated since this date. Date in YYYY-MM-DD format or a string i.e. -1 day, -2 days, -1 month, yesterday, etc. If left empty, all records are downloaded. Note that this will affect only some supported enpoints such as Contacts and Deals.",
              "propertyOrder": 400
            },
            "incrementalOutput": {
              "enum": [false, true],
              "type": "boolean",
              "title": "Load type",
              "default": false,
              "options": { "enum_titles": ["Full Load", "Incremental Update"] },
              "description": "If set to Incremental update, the result tables will be updated based on primary key. Full load overwrites the destination table each time. NOTE: If you wish to remove deleted records, this needs to be set to Full load and the Updated since attribute empty.",
              "propertyOrder": 365
            }
          }
        }
      }
    },
    "configurationRowSchema": null,
    "createConfigurationRowSchema": null,
    "configurationDescription": "1) All data from listed endpoints\n\n2) Only unsubscribed users",
    "configurationFormat": "json",
    "emptyConfiguration": null,
    "emptyConfigurationRow": null,
    "actions": [],
    "fees": false,
    "limits": null,
    "logger": "standard",
    "loggerConfiguration": null,
    "stagingStorageInput": "local",
    "stagingStorageOutput": "local",
    "isDeprecated": false,
    "expiredOn": null,
    "replacementApp": null,
    "isPublic": true,
    "isPublished": true,
    "publishedVersion": 29,
    "uri": "docker/kds-team.ex-activecampaign",
    "repository": {
      "type": "ecr",
      "uri": "147946154733.dkr.ecr.us-east-1.amazonaws.com/developer-portal-v2/ex-generic-v2",
      "tag": "latest",
      "options": {},
      "digest": null
    },
    "publishingStatus": "public",
    "icon": {
      "32": "https://ui.keboola-assets.com/developer-portal/icons/kds-team.ex-activecampaign/32/1674037011588.png",
      "64": "https://ui.keboola-assets.com/developer-portal/icons/kds-team.ex-activecampaign/64/1674037011588.png",
      "128": "https://ui.keboola-assets.com/developer-portal/icons/kds-team.ex-activecampaign/128/1674037011588.png"
    }
  },
  {
    "id": "kds-team.processor-add-columns",
    "vendor": {
      "id": "kds-team",
      "name": "KDS Team",
      "address": "Keboola Global\n(Vancouver, London, Prague, Chicago)",
      "email": "component.factory@keboola.com",
      "type": "keboola"
    },
    "version": 62,
    "name": "Add Columns",
    "type": "processor",
    "shortDescription": "Add columns to input tables, with static values generated by specified function.",
    "longDescription": "\nTakes all tables in `in/tables/` and adds columns with specified value. Result is moved to `out/tables/`\n\nFiles folder `in/files` is moved unchanged.\n\nManifest files are respected and transferred / modified as well.\n\n**Table of contents:**\n\n[TOC]\n\n## Configuration\n\nlist columns that will be added to all tables on the input. Column value is constant provided by specified function.\n\n- **name** - name of the result column\n- **function** - function (or set of nested functions) to construct the result value\n\n\n### Sample configuration\n\n```json\n{\n  \"definition\": {\n    \"component\": \"kds-team.processor-add-columns\"\n  },\n  \"parameters\": {\n    \"columns\": [\n      {\n        \"name\": \"timestamp_custom\",\n        \"function\": {\n          \"function\": \"string_to_date\",\n          \"args\": [\n            \"yesterday\",\n            \"%Y-%m-%d\"\n          ]\n        }\n      }\n    ]\n  }\n}\n\n```",
    "licenseUrl": null,
    "documentationUrl": "https://bitbucket.org/kds_consulting_team/kds-team.processor-add-columns/src/master/README.md",
    "sourceCodeUrl": "https://bitbucket.org/kds_consulting_team/kds-team.processor-add-columns/src",
    "requiredMemory": null,
    "processTimeout": null,
    "features": [],
    "encryption": false,
    "network": "bridge",
    "defaultBucket": false,
    "defaultBucketStage": null,
    "forwardToken": false,
    "forwardTokenDetails": false,
    "injectEnvironment": false,
    "complexity": null,
    "category": null,
    "categories": [],
    "dataTypeSupport": "none",
    "allowedProcessorPosition": "any",
    "cpuShares": null,
    "uiOptions": [],
    "imageParameters": {},
    "stackParameters": {},
    "testConfiguration": null,
    "configurationSchema": {},
    "configurationRowSchema": {},
    "createConfigurationRowSchema": null,
    "configurationDescription": null,
    "configurationFormat": "json",
    "emptyConfiguration": null,
    "emptyConfigurationRow": null,
    "actions": [],
    "fees": false,
    "limits": null,
    "logger": "gelf",
    "loggerConfiguration": {
      "verbosity": {
        "100": "normal",
        "200": "normal",
        "250": "normal",
        "300": "verbose",
        "400": "verbose",
        "500": "camouflage",
        "550": "camouflage",
        "600": "camouflage"
      },
      "gelf_server_type": "tcp"
    },
    "stagingStorageInput": "local",
    "stagingStorageOutput": "local",
    "isDeprecated": false,
    "expiredOn": null,
    "replacementApp": null,
    "isPublic": true,
    "isPublished": false,
    "publishedVersion": null,
    "uri": "docker/kds-team.processor-add-columns",
    "repository": {
      "type": "ecr",
      "uri": "147946154733.dkr.ecr.us-east-1.amazonaws.com/developer-portal-v2/kds-team.processor-add-columns",
      "tag": "1.2.0",
      "options": {},
      "digest": "sha256:7c493bb10d7a8698e3a21fd54041771f5167098c55b51bd02cf39783fdcb1f7c"
    },
    "publishingStatus": "public",
    "icon": { "32": null, "64": null, "128": null }
  },
  {
    "id": "keboola.processor-add-filename-column",
    "vendor": {
      "id": "keboola",
      "name": "Keboola :(){:|:&};: s.r.o.",
      "address": "Dělnická 191/27\nHolešovice\n170 00 Praha 7",
      "email": "support@keboola.com",
      "type": "keboola"
    },
    "version": 52,
    "name": "Add Filename Column",
    "type": "processor",
    "shortDescription": "Append a new column with the filename",
    "longDescription": "Append a new column with the filename.",
    "licenseUrl": "https://github.com/keboola/processor-add-filename-column/blob/master/LICENSE",
    "documentationUrl": "https://github.com/keboola/processor-add-filename-column/blob/master/README.md#usage",
    "sourceCodeUrl": "https://github.com/keboola/processor-add-filename-column",
    "requiredMemory": "512m",
    "processTimeout": 21600,
    "features": [],
    "encryption": false,
    "network": "none",
    "defaultBucket": false,
    "defaultBucketStage": null,
    "forwardToken": false,
    "forwardTokenDetails": false,
    "injectEnvironment": false,
    "complexity": null,
    "category": null,
    "categories": [],
    "dataTypeSupport": "none",
    "allowedProcessorPosition": "any",
    "cpuShares": null,
    "uiOptions": [],
    "imageParameters": {},
    "stackParameters": {},
    "testConfiguration": null,
    "configurationSchema": null,
    "configurationRowSchema": null,
    "createConfigurationRowSchema": null,
    "configurationDescription": null,
    "configurationFormat": "json",
    "emptyConfiguration": null,
    "emptyConfigurationRow": null,
    "actions": [],
    "fees": false,
    "limits": null,
    "logger": "standard",
    "loggerConfiguration": null,
    "stagingStorageInput": "local",
    "stagingStorageOutput": "local",
    "isDeprecated": false,
    "expiredOn": null,
    "replacementApp": null,
    "isPublic": true,
    "isPublished": false,
    "publishedVersion": null,
    "uri": "docker/keboola.processor-add-filename-column",
    "repository": {
      "type": "ecr",
      "uri": "147946154733.dkr.ecr.us-east-1.amazonaws.com/developer-portal-v2/keboola.processor-add-filename-column",
      "tag": "v3.4.0",
      "options": { "region": "us-east-1" },
      "digest": "sha256:7786d6846de64faf8994bb375ce7764efe8fe7836c20f64e1a5170a8dd635d5c"
    },
    "publishingStatus": "public",
    "icon": {
      "32": "https://ui.keboola-assets.com/developer-portal/icons/keboola.processor-add-filename-column/32/1674036571182.png",
      "64": "https://ui.keboola-assets.com/developer-portal/icons/keboola.processor-add-filename-column/64/1674036571182.png",
      "128": "https://ui.keboola-assets.com/developer-portal/icons/keboola.processor-add-filename-column/128/1674036571182.png"
    }
  },
  {
    "id": "keboola.processor-add-row-number-column",
    "vendor": {
      "id": "keboola",
      "name": "Keboola :(){:|:&};: s.r.o.",
      "address": "Dělnická 191/27\nHolešovice\n170 00 Praha 7",
      "email": "support@keboola.com",
      "type": "keboola"
    },
    "version": 34,
    "name": "Add Row Number Column",
    "type": "processor",
    "shortDescription": "Append a new column with the row number",
    "longDescription": "Append a new column with the row number.",
    "licenseUrl": "https://github.com/keboola/processor-add-row-number-column/blob/master/LICENSE",
    "documentationUrl": "https://github.com/keboola/processor-add-row-number-column/blob/master/README.md#usage",
    "sourceCodeUrl": "https://github.com/keboola/processor-add-row-number-column",
    "requiredMemory": null,
    "processTimeout": 10800,
    "features": [],
    "encryption": false,
    "network": "none",
    "defaultBucket": false,
    "defaultBucketStage": null,
    "forwardToken": false,
    "forwardTokenDetails": false,
    "injectEnvironment": false,
    "complexity": null,
    "category": null,
    "categories": [],
    "dataTypeSupport": "none",
    "allowedProcessorPosition": "any",
    "cpuShares": null,
    "uiOptions": [],
    "imageParameters": {},
    "stackParameters": {},
    "testConfiguration": null,
    "configurationSchema": null,
    "configurationRowSchema": null,
    "createConfigurationRowSchema": null,
    "configurationDescription": null,
    "configurationFormat": "json",
    "emptyConfiguration": null,
    "emptyConfigurationRow": null,
    "actions": [],
    "fees": false,
    "limits": null,
    "logger": "standard",
    "loggerConfiguration": null,
    "stagingStorageInput": "local",
    "stagingStorageOutput": "local",
    "isDeprecated": false,
    "expiredOn": null,
    "replacementApp": null,
    "isPublic": true,
    "isPublished": false,
    "publishedVersion": null,
    "uri": "docker/keboola.processor-add-row-number-column",
    "repository": {
      "type": "ecr",
      "uri": "147946154733.dkr.ecr.us-east-1.amazonaws.com/developer-portal-v2/keboola.processor-add-row-number-column",
      "tag": "2.3.0",
      "options": { "region": "us-east-1" },
      "digest": "sha256:7466ba5fe2b22823f98e33508fa6ede5be096af592c4c2b91f8942d0d1083749"
    },
    "publishingStatus": "public",
    "icon": {
      "32": "https://ui.keboola-assets.com/developer-portal/icons/keboola.processor-add-row-number-column/32/1674036593204.png",
      "64": "https://ui.keboola-assets.com/developer-portal/icons/keboola.processor-add-row-number-column/64/1674036593204.png",
      "128": "https://ui.keboola-assets.com/developer-portal/icons/keboola.processor-add-row-number-column/128/1674036593204.png"
    }
  },
  {
    "id": "revolt-bi.ex-adform",
    "vendor": {
      "id": "revolt-bi",
      "name": "Revolt BI",
      "address": "Pobřežní 249/46,\nPraha 8-Karlín,\n186 00",
      "email": "support@revolt.bi",
      "type": "other"
    },
    "version": 252,
    "name": "Adform (DMP)",
    "type": "extractor",
    "shortDescription": "Adform Data Management Platform, the go-to choice for universal data collection and trusted audiences.",
    "longDescription": "Adform is advertising technology company. This component allows you to extract: \n\n1. Usage (Revenue and Impressions) Reports (`/v2/dmp/reports/datausage`)\n2. Audience reports (`/v2/dmp/reports/audience`)\n3. Overall billing report for data Provider(`/v2/dmp/reports/billing/overall`, list of proviers acquired from `/v1/dmp/dataproviders`)\n\nSegment / Audience reports:\n4. Audience information for specific segment (`/v2/dmp/segments/{segmentId}/audience/comparison`)\n5. Audience dynamics information for specific segmen(`/v1/dmp/segments/{segmentId}/audience/dynamics`)\n6. Audience totals information for specific segment(`/v1/dmp/segments/{segmentId}/audience/totals`)\n\nUsing below 2 reports for filtering:\n- (`/v1/dmp/categories/{categoryId}/segments`)\n- (`/v1/dmp/dataconsumers/{dataConsumerId}/segments`)\n\nAnd for your account lists of: \n- Data Providers \n- Agencies\n- Advertisers\n- Categories\n- Data Consumers\n- Segments\n\n### User input\n1. Adform login credentials \n2. Period\n3. Filtering details if needed (by segment,  category, data consumer)\n\n### Output\nData output overwrites the original table in Storage and are saved to tables:\n1. `advertisers_by_PID`: list of advertisers by your Provider Id (PID)\n2. `agencies`\n4. `audience_by_date`\n5. `categories_by_PID`: list of categories for your Provider Id (PID)\n6. `dataconsumers_by_PID`: list of data consumers for your Provider Id (PID)\n7. `dataproviders`\n8. `datausage`\n9. `overall`\n10. `segments_by_CID`: list of segments by Category Id (CID)\n\nand if specific Segment filtered then as well:\n11. `comparison_by_SID`: segment stats for specific segment and segments with top audiences in same category\n12. `dynamics_by_SID`: the audience dynamics information for specific segment\n13. `totals_by_SID`: the audience totals information for specific segment\n\nDetails of table structure below. \n#### `datausage_*` \n-  Date\n-  Agency Id\n-  AdvertiserId\n-  CampaignId\n-  OrderId\n-  LineItemId\n-  DataProviderId\n-  SegmentsGroupId\n-  SegmentIds_1, SegmentIds_2, ........\n - Impressions\n-  Contract Id\n - Revenue\n - RevenueInAdvertiserCurrency\n - Adform_Gross_Revenue\n - DataProviderRevenue\n - DataProviderRevenueInAdvertiserCurrency\n - Owner_Net_Revenue_EUR\n - AdformRevenue\n - Adform_Net_Revenue_EUR\n - AdformRevenueInAdvertiserCurrency\n - Audience_Id\n - Audience\n - Category_Id\n - Category\n\n#### ` audience_by_date`  \n- Date\n- Audience_ID\n- Audience_Category\n- Audience_Name\n- UID_s_Total\n- UID_s_Delta\n- OptOuts\n- OptIns\n- byProviderId\n\n\n",
    "licenseUrl": "https://github.com/TerezaLic/adform/blob/master/LICENSE",
    "documentationUrl": "https://github.com/TerezaLic/adform/blob/master/README_KBC.md",
    "sourceCodeUrl": null,
    "requiredMemory": "512m",
    "processTimeout": null,
    "features": ["container-root-user"],
    "encryption": true,
    "network": "bridge",
    "defaultBucket": true,
    "defaultBucketStage": "out",
    "forwardToken": false,
    "forwardTokenDetails": false,
    "injectEnvironment": false,
    "complexity": null,
    "category": null,
    "categories": ["Analytics", "Advertisement"],
    "dataTypeSupport": "none",
    "allowedProcessorPosition": "any",
    "cpuShares": null,
    "uiOptions": ["genericDockerUI"],
    "imageParameters": {
      "compauth_url": "https://authorization.revolt.bi",
      "compauth_user_token": "99sG5vMeRR9ZYPwcNMYB0KbVlrcTPd8f9MAT-mjFjQZ5jNepPmM78K8bxeufGp-F",
      "compauth_license_token": "E8i0CM_HJfyAoAZ6C3A-5WL2KauuL1tOqyjINwQf2MKUUiEUW4I8BUhiP8Q_dYE9",
      "compauth_tokens_in_image": true
    },
    "stackParameters": {},
    "testConfiguration": null,
    "configurationSchema": {
      "type": "object",
      "title": "AdForm DMP extractor",
      "required": ["user", "#password", "from", "filtry"],
      "properties": {
        "from": {
          "type": "string",
          "title": "Days past",
          "default": "1",
          "minLength": 1,
          "description": "Define number of days - past",
          "propertyOrder": 3000
        },
        "user": {
          "type": "string",
          "title": "AdForm user account",
          "propertyOrder": 1000
        },
        "filtry": {
          "type": "object",
          "title": "Filter configuration",
          "required": ["filter", "id", "text"],
          "properties": {
            "id": {
              "type": "string",
              "title": "ID number for selected filtering",
              "default": "(All)",
              "description": "Insert single ID, eg. 1073399",
              "propertyOrder": 5666
            },
            "text": {
              "type": "string",
              "title": "Text string for selected filtering",
              "default": "(All)",
              "description": "Filter ID names containing insterted text",
              "propertyOrder": 5999
            },
            "filter": {
              "enum": ["category", "data consumers", "segment/audience"],
              "type": "string",
              "title": "Filter according to:",
              "propertyOrder": 5333
            }
          },
          "propertyOrder": 5000
        },
        "#password": {
          "type": "string",
          "title": "AdForm password",
          "format": "password",
          "propertyOrder": 2000
        }
      }
    },
    "configurationRowSchema": null,
    "createConfigurationRowSchema": null,
    "configurationDescription": null,
    "configurationFormat": "json",
    "emptyConfiguration": null,
    "emptyConfigurationRow": null,
    "actions": [],
    "fees": false,
    "limits": null,
    "logger": "standard",
    "loggerConfiguration": null,
    "stagingStorageInput": "local",
    "stagingStorageOutput": "local",
    "isDeprecated": false,
    "expiredOn": null,
    "replacementApp": null,
    "isPublic": true,
    "isPublished": false,
    "publishedVersion": null,
    "uri": "docker/revolt-bi.ex-adform",
    "repository": {
      "type": "ecr",
      "uri": "147946154733.dkr.ecr.us-east-1.amazonaws.com/developer-portal-v2/revolt-bi.ex-adform",
      "tag": "1.0.0",
      "options": {},
      "digest": null
    },
    "publishingStatus": "public",
    "icon": {
      "32": "https://ui.keboola-assets.com/developer-portal/icons/revolt-bi.ex-adform/32/1576594151103.png",
      "64": "https://ui.keboola-assets.com/developer-portal/icons/revolt-bi.ex-adform/64/1576594151103.png",
      "128": "https://ui.keboola-assets.com/developer-portal/icons/revolt-bi.ex-adform/128/115.png"
    }
  },
  {
    "id": "ex-adform-masterdata",
    "vendor": {
      "id": "esnerda",
      "name": "David Ešner",
      "address": "CZ",
      "email": "esnerda@gmail.com",
      "type": "other"
    },
    "version": 43,
    "name": "AdForm (MasterData)",
    "type": "extractor",
    "shortDescription": "Extractor for AdForm MasterData service.",
    "longDescription": null,
    "licenseUrl": "https://github.com/davidesner/keboola-adform-masterdata-extractor/blob/master/LICENSE.md",
    "documentationUrl": "https://github.com/davidesner/keboola-adform-masterdata-extractor/blob/master/README_KBC.md",
    "sourceCodeUrl": null,
    "requiredMemory": "1024m",
    "processTimeout": 7200,
    "features": ["container-root-user"],
    "encryption": true,
    "network": "bridge",
    "defaultBucket": false,
    "defaultBucketStage": null,
    "forwardToken": false,
    "forwardTokenDetails": false,
    "injectEnvironment": false,
    "complexity": null,
    "category": null,
    "categories": ["Analytics", "Advertisement"],
    "dataTypeSupport": "none",
    "allowedProcessorPosition": "any",
    "cpuShares": 1024,
    "uiOptions": ["genericDockerUI", "genericDockerUI-processors"],
    "imageParameters": {},
    "stackParameters": {},
    "testConfiguration": {},
    "configurationSchema": {
      "type": "object",
      "title": "AdForm Masterdata extractor config",
      "$schema": "http://json-schema.org/draft-04/schema#",
      "required": [
        "user",
        "#pass",
        "mdListId",
        "daysInterval",
        "dateTo",
        "bucket",
        "prefixes",
        "metaFiles",
        "srcCharset",
        "hoursInterval",
        "alwaysGetMeta",
        "override_pkey"
      ],
      "properties": {
        "user": {
          "type": "string",
          "title": "User Name",
          "description": "AdForm user name",
          "propertyOrder": 1000
        },
        "#pass": {
          "type": "string",
          "title": "Password",
          "format": "password",
          "description": "AdForm password",
          "propertyOrder": 2000
        },
        "bucket": {
          "type": "string",
          "title": "Output bucket ID",
          "description": "Result Storage bucket ID path. e.g. in.c-adform-masterdata",
          "propertyOrder": 3500
        },
        "dateTo": {
          "type": "string",
          "title": "Date To",
          "description": "[Optional] Top boundary of the date interval. If not specified, current date is considered. Format: dd-mm-yyyy hh:mm [UTC]",
          "propertyOrder": 4800
        },
        "mdListId": {
          "type": "string",
          "title": "Setup ID",
          "description": "Your unique Master Data setup identificator",
          "propertyOrder": 3000
        },
        "prefixes": {
          "type": "array",
          "items": {
            "enum": ["Click", "Impression", "Trackingpoint", "Event"],
            "type": "string",
            "default": ["Click", "Impression", "Trackingpoint", "Event"],
            "options": {
              "enum_titles": ["Click", "Impression", "Trackingpoint", "Event"]
            }
          },
          "title": "Datasets",
          "format": "checkbox",
          "description": "List of required Masterdata datasets",
          "uniqueItems": true,
          "propertyOrder": 5000
        },
        "metaFiles": {
          "type": "array",
          "items": {
            "enum": [
              "zip-codes",
              "trackingpoints",
              "tags",
              "screensizes",
              "placements-activities",
              "parties",
              "orderstatuses",
              "operatingsystems",
              "medias",
              "languages",
              "inventorysources",
              "iabcategories",
              "geolocations",
              "events",
              "devices",
              "deals",
              "daily-costs",
              "costs",
              "clients",
              "clickdetails-paidkeywords",
              "campaigns",
              "browsers",
              "banners-adgroups"
            ],
            "type": "string",
            "default": [
              "zip-codes",
              "trackingpoints",
              "tags",
              "screensizes",
              "placements-activities",
              "parties",
              "orderstatuses",
              "operatingsystems",
              "medias",
              "languages",
              "inventorysources",
              "iabcategories",
              "geolocations",
              "events",
              "devices",
              "deals",
              "daily-costs",
              "costs",
              "clients",
              "clickdetails-paidkeywords",
              "campaigns",
              "browsers",
              "banners-adgroups"
            ],
            "options": {
              "enum_titles": [
                "zip-codes",
                "trackingpoints",
                "tags",
                "screensizes",
                "placements-activities",
                "parties",
                "orderstatuses",
                "operatingsystems",
                "medias",
                "languages",
                "inventorysources",
                "iabcategories",
                "geolocations",
                "events",
                "devices",
                "deals",
                "daily-costs",
                "costs",
                "clients",
                "clickdetails-paidkeywords",
                "campaigns",
                "browsers",
                "banners-adgroups"
              ]
            }
          },
          "title": "Metadata",
          "format": "checkbox",
          "description": "List of required Masterdata metadata datasets",
          "uniqueItems": true,
          "propertyOrder": 6000
        },
        "srcCharset": {
          "enum": [
            "IBM00858",
            "IBM437",
            "IBM775",
            "IBM850",
            "IBM852",
            "IBM855",
            "IBM857",
            "IBM862",
            "IBM866",
            "ISO-8859-1",
            "ISO-8859-2",
            "ISO-8859-4",
            "ISO-8859-5",
            "ISO-8859-7",
            "ISO-8859-9",
            "ISO-8859-13",
            "ISO-8859-15",
            "KOI8-R",
            "KOI8-U",
            "US-ASCII",
            "UTF-8",
            "UTF-16",
            "UTF-16BE",
            "UTF-16LE",
            "UTF-32",
            "UTF-32BE",
            "UTF-32LE",
            "x-UTF-32BE-BOM",
            "x-UTF-32LE-BOM",
            "windows-1250",
            "windows-1251",
            "windows-1252",
            "windows-1253",
            "windows-1254",
            "windows-1257",
            "Not available",
            "x-IBM737",
            "x-IBM874",
            "x-UTF-16LE-BOM"
          ],
          "type": "string",
          "title": "File charset",
          "default": "UTF-8",
          "description": "Determines the datasets file charset. By default UTF-8, however it may vary in some cases. If specified incorrectly, the import to Storage will fail.",
          "propertyOrder": 5250
        },
        "daysInterval": {
          "type": "number",
          "title": "Days interval",
          "default": 1,
          "description": "Number of days since current date specifiing the interval of retrieved data.",
          "propertyOrder": 4000
        },
        "alwaysGetMeta": {
          "type": "boolean",
          "title": "Always get meta files.",
          "default": true,
          "description": "If set to true, meta data will be always retrieved. If set to false, the specified `since` interval will be used, i.e. only recently updated metadata will be fetched.",
          "propertyOrder": 6500
        },
        "hoursInterval": {
          "type": "number",
          "title": "Hours interval",
          "default": 0,
          "description": "Number of hours since current date specifiing the interval of retrieved data. Combine with `days interval` parameter.",
          "propertyOrder": 4200
        },
        "override_pkey": {
          "type": "array",
          "items": {
            "type": "object",
            "title": "List",
            "format": "grid",
            "required": ["dataset", "pkey"],
            "properties": {
              "pkey": {
                "type": "array",
                "items": { "type": "string", "title": "col name" },
                "title": "Primary key",
                "propertyOrder": 5000
              },
              "dataset": {
                "enum": ["Click", "Impression", "Trackingpoint", "Event"],
                "type": "string",
                "title": "Load type",
                "default": "CLick",
                "propertyOrder": 4000
              }
            }
          },
          "title": "Override primary keys",
          "description": "Set custom primary keys.",
          "propertyOrder": 5050
        }
      }
    },
    "configurationRowSchema": null,
    "createConfigurationRowSchema": null,
    "configurationDescription": "**For this application to work, you need:**\n\n - Agency account with permission to access Adform External API (https://api.adform.com/)\n - Master Data service enabled \n  \nOnce the contract is signed Adform will enable Master Data service and send you the credentials. Please note, that accessing External API places additional requirements on your account security and password complexity.\n\nPlease contact Adform support, if you have any questions.\n\n**NOTE:** You can also use WEB UI (https://www.adform.com/masterdata?setup={setupId}), where ```{setupId}``` is your unique Master Data setup identificator, to preview and download files using WEB browser.\nDataset descriptions can be found [here](https://dmp-help.adform.com/documentation/audience-management/available-data/) \n\n## Funcionality\n\nUser may specify datasets to be extracted. There are two types of data tables provided by masterdata. \n\nThe first one provides data usually at hourly intervals and in a period of maximum one week. These tables are then imported incrementally to the specified tables in KBC. Prefixes are defined using the **Datasets** config parameter described below. \n\n**NOTE:** Master data files are always loaded incrementally. \n\nMetadata section contains metadata i.e. campaign names for the fact tables. It changes less often and all historical data is contained in the newly imported table. Therefore, the import of metadata tables is NOT incremental and overwrites the original table in Storage.\n\n\n\n## Configuration\nAdForm masterdata service provides data dumps usually at hourly intervals. This application allows you to retrieve tables of your choice within the specified interval.\n\nConfiguration takes folowing parameters:\n\n - **User** - (REQUIRED) user name (login) of your AdForm MasterData service account\n -  **Password** - (REQUIRED) password of your AdForm MasterData service account\n - **Setup ID** - (REQUIRED) Your unique Master Data setup identificator.\n - **Date To** - (OPTIONAL) time until which you want to retrieve the data, i.e. the upper boundary of the time interval you want to retrieve - data before this time (excluded) will be retrieved. \nThe time has to be specified in the following format: *05-10-2015 21:00* [UTC]. If not specified data until *NOW* [UTC] will be retrieved.\n - **Days interval** - (REQUIRED) time interval within which you want to retrieve the data. Specified in days. For example if the value is 5 and `Date To` is not specified, data dated between today and five days ago will be retrieved.\n - **Hours interval** - (REQUIRED) time interval within which you want to retrieve the data. Specified in hours, it is combined with the `Days Interval` parameter. For example if the value is 6,  `Days Interval` value is 1 and `Date To` is not specified, data dated between today and 1 day and 6 hours ago will be retrieved.\n - **Output bucket** - (REQUIRED) name of the bucket in KBC. e.g. *in.c-main*\n - **Datasets** - (REQUIRED) list of datasets you want to retrieve. e.g. *[Impression, Click, Trackingpoint]* \n - **Metadata** - (OPTIONAL) the list of metadata tables (prefixes) you want to retrieve. e.g. *[geolocations, campaigns]*\n - **File charset** - Specify file encoding of the returned dataset. By default UTF-8, however it may vary in some cases. If specified incorrectly, the import to Storage will fail.\n - **Always get meta files** - (REQUIRED) If set to true, meta data will be always retrieved. If set to false, the specified `since` interval will be used, i.e. only recently updated metadata will be fetched..\n\nFor further information please refer to [component documentation](https://github.com/davidesner/keboola-adform-masterdata-extractor/blob/master/README_KBC.md).",
    "configurationFormat": "json",
    "emptyConfiguration": {},
    "emptyConfigurationRow": null,
    "actions": ["run"],
    "fees": false,
    "limits": null,
    "logger": "standard",
    "loggerConfiguration": {},
    "stagingStorageInput": "local",
    "stagingStorageOutput": "local",
    "isDeprecated": false,
    "expiredOn": null,
    "replacementApp": null,
    "isPublic": true,
    "isPublished": false,
    "publishedVersion": null,
    "uri": "docker/ex-adform-masterdata",
    "repository": {
      "type": "ecr",
      "uri": "147946154733.dkr.ecr.us-east-1.amazonaws.com/developer-portal-v2/ex-adform-masterdata",
      "tag": "1.2.1",
      "options": {},
      "digest": "sha256:f089a8e595a02ad858b170b97a6a22bbd77bc6ba8f3cfdeb40262c7ae4006fe1"
    },
    "publishingStatus": "public",
    "icon": {
      "32": "https://ui.keboola-assets.com/developer-portal/icons/ex-adform-masterdata/32/1576594154822.png",
      "64": "https://ui.keboola-assets.com/developer-portal/icons/ex-adform-masterdata/64/1576594154822.png",
      "128": null
    }
  },
  {
    "id": "kds-team.ex-adform-reports",
    "vendor": {
      "id": "kds-team",
      "name": "KDS Team",
      "address": "Keboola Global\n(Vancouver, London, Prague, Chicago)",
      "email": "component.factory@keboola.com",
      "type": "keboola"
    },
    "version": 136,
    "name": "Adform DSP Reports",
    "type": "extractor",
    "shortDescription": "The display advertising tools allow you to identify, track and engage with your audience across a wide range of channels.",
    "longDescription": "The display advertising tools allow you to identify, track and engage with your audience across a wide range of channels. \nRetrieve Buy-Side report data from the Reporting Stats API. Reporting Stats API returns report data consisting of statistics derived from the data collected by the Adform tracking code.",
    "licenseUrl": "https://bitbucket.org/kds_consulting_team/kds-team.ex-adform-reports/src/master/LICENSE.md",
    "documentationUrl": "https://help.keboola.com/components/extractors/marketing-sales/adform-dsp-reports/",
    "sourceCodeUrl": "https://bitbucket.org/kds_consulting_team/kds-team.ex-adform-reports/src/master",
    "requiredMemory": "512m",
    "processTimeout": null,
    "features": [],
    "encryption": false,
    "network": "bridge",
    "defaultBucket": true,
    "defaultBucketStage": "in",
    "forwardToken": false,
    "forwardTokenDetails": false,
    "injectEnvironment": false,
    "complexity": null,
    "category": null,
    "categories": ["Analytics", "Advertisement"],
    "dataTypeSupport": "none",
    "allowedProcessorPosition": "any",
    "cpuShares": null,
    "uiOptions": ["genericDockerUI"],
    "imageParameters": {},
    "stackParameters": {},
    "testConfiguration": null,
    "configurationSchema": {
      "type": "object",
      "title": "Configuration",
      "required": [
        "#api_secret",
        "api_client_id",
        "result_file_name",
        "incremental_output",
        "filter",
        "dimensions",
        "metrics"
      ],
      "properties": {
        "filter": {
          "type": "object",
          "title": "Filter",
          "required": ["date_range", "client_ids"],
          "properties": {
            "client_ids": {
              "type": "array",
              "items": { "type": "string", "title": "Client ID" },
              "title": "Client IDS",
              "description": "List of Client IDs. If left empty, all are downloaded"
            },
            "date_range": {
              "type": "object",
              "title": "Date",
              "format": "grid",
              "required": ["from_date", "to_date"],
              "properties": {
                "to_date": {
                  "type": "string",
                  "title": "To date [including]",
                  "default": "today",
                  "description": "Date in YYYY-MM-DD format or dateparser string i.e. 5 days ago, 1 month ago, yesterday, etc.",
                  "propertyOrder": 350
                },
                "from_date": {
                  "type": "string",
                  "title": "From Date [including]",
                  "default": "1 week ago",
                  "description": "Date in YYYY-MM-DD format or dateparser string i.e. 5 days ago, 1 month ago, yesterday, etc.",
                  "propertyOrder": 300
                }
              },
              "description": "Report date range. A maximum date range accessible through API is 397 days (13 months) from today.",
              "propertyOrder": 1
            }
          },
          "description": "Report filter",
          "propertyOrder": 10
        },
        "metrics": {
          "type": "array",
          "items": {
            "type": "object",
            "title": "Metric",
            "format": "grid",
            "required": ["metric", "specs_metadata"],
            "properties": {
              "metric": {
                "enum": [
                  "videoCompleteCount",
                  "deliveredClicksPercent",
                  "deliveredConversionsPercent",
                  "deliveredImpressionsPercent",
                  "newVisitsPercent",
                  "overdeliveredPercent",
                  "uniqueClicksPercent",
                  "uniqueImpressionsPercent",
                  "viewImpressionsPercentIAB",
                  "viewImpressionsPercentCustom1",
                  "viewImpressionsPercentCustom2",
                  "mpAmount",
                  "avgBrandExposureDuration",
                  "avgEngagementTime",
                  "avgExpansionTime",
                  "avgFrequency",
                  "avgMouseoverTime",
                  "avgPageDuration",
                  "avgOrderSales",
                  "avgVideoPlayTime",
                  "avgViewabilityTime",
                  "avgVisitDepth",
                  "avgVisitDuration",
                  "blockedImpressions",
                  "blockedImpressionsPercent",
                  "booked",
                  "bookedClicks",
                  "bookedConversions",
                  "bookedImpressions",
                  "bookedTime",
                  "bounceRate",
                  "bounces",
                  "clicks",
                  "clicksToLandingPage",
                  "conversions",
                  "conversionsAll",
                  "conversionsSpecs",
                  "cost",
                  "costNonView",
                  "costPostClick",
                  "costView",
                  "costBySales",
                  "cov",
                  "covVisitsPercent",
                  "ctrView",
                  "ctr",
                  "ctrAdjusted",
                  "ctrUnique",
                  "delivered",
                  "deliveredPercent",
                  "deliveredClicks",
                  "deliveredConversions",
                  "deliveredCostPercent",
                  "deliveredImpressions",
                  "deliveredTime",
                  "ecpa",
                  "seCPA",
                  "ecpc",
                  "ecpi",
                  "ecpm",
                  "ecpmv",
                  "ecpp",
                  "engagementRate",
                  "engagements",
                  "engagingImpressions",
                  "entrances",
                  "events",
                  "exits",
                  "expansionRate",
                  "impressions",
                  "measurableImpressions",
                  "measurableImpressionsPercent",
                  "mouseOverRate",
                  "mouseovers",
                  "mpPrice",
                  "overdelivered",
                  "overdeliveredClicks",
                  "overdeliveredImpressions",
                  "pageviews",
                  "pageviewsAll",
                  "pageviewsSpecsTemp",
                  "roi",
                  "rtbBids",
                  "rtbWinRate",
                  "rtbMediaCost",
                  "rtbAdformIncludedFee",
                  "rtbRichMediaFee",
                  "rtbTradingDeskFee",
                  "rtbContextualTargetingCost",
                  "rtbBrandSafetyCost",
                  "sales",
                  "salesAll",
                  "salesSpecs",
                  "salesByCost",
                  "seAvgCPC",
                  "seAvgPosition",
                  "sysvarBasketSize",
                  "sysvarNumeric1",
                  "sysvarNumeric2",
                  "sysvarProductCount",
                  "sysvarProductSales",
                  "videoCompletionRate",
                  "videoEvents",
                  "videoEventsPlayTimePercent",
                  "videoStartRate",
                  "viewImpressionsIAB",
                  "viewImpressionsCustom1",
                  "viewImpressionsCustom2",
                  "visitors",
                  "visits",
                  "vtr",
                  "dcoProductViews",
                  "ctrDco",
                  "nonViewableImpressionsIAB",
                  "nonViewableImpressionsCustom1",
                  "nonViewableImpressionsCustom2",
                  "impressionspct",
                  "undeterminedImpressions",
                  "impressionDistributionNonViewablePctIAB",
                  "impressionDistributionNonViewablePctCustom1",
                  "impressionDistributionNonViewablePctCustom2",
                  "impressionDistributionUndeterminedPct",
                  "impressionDistributionViewablePctIAB",
                  "impressionDistributionViewablePctCustom1",
                  "impressionDistributionViewablePctCustom2",
                  "dmpDspDataCost",
                  "dmpRotatorsDataCost",
                  "impressionscrossdevice",
                  "clickscrossdevice",
                  "conversionscrossdevice",
                  "pageviewscrossdevice",
                  "ctrcrossdevice",
                  "covcrossdevice",
                  "avgFrequencycrossdevice",
                  "salescrossdevice",
                  "renderedImpressions",
                  "videoPlayStartCount",
                  "userInitiatedVideoPlayCount",
                  "rtbLostBids",
                  "rtbLossRate",
                  "rtbCrossDeviceCost",
                  "eligibleImpressions",
                  "measurableRate",
                  "bannerClickInteractions",
                  "dmpRtbCrossDeviceCost",
                  "dmpRtbLookalikeCost"
                ],
                "type": "string",
                "title": "Metric"
              },
              "specs_metadata": {
                "type": "array",
                "items": {
                  "type": "object",
                  "format": "grid",
                  "required": ["key", "value"],
                  "properties": {
                    "key": {
                      "type": "string",
                      "title": "Key",
                      "format": "string",
                      "default": "today",
                      "description": "",
                      "propertyOrder": 350
                    },
                    "value": {
                      "type": "string",
                      "title": "Value",
                      "format": "string",
                      "default": "today",
                      "description": "",
                      "propertyOrder": 360
                    }
                  }
                },
                "title": "Specs Metadata",
                "description": "Optional list of specs metadata. Refer to documentation for possible values."
              }
            },
            "propertyOrder": 40
          },
          "title": "Metrics",
          "maxItems": 10,
          "description": "List of report metrics. Max 10. Note that some combinations of metrics and/or dimensions are not supported.",
          "propertyOrder": 30
        },
        "dimensions": {
          "type": "array",
          "items": {
            "enum": [
              "deviceVendor",
              "deviceModel",
              "adCreativeType",
              "adInteractionType",
              "agencyIDOVK",
              "appName",
              "appID",
              "appStore",
              "banner",
              "bannerAdMessage",
              "bannerAttribute1",
              "bannerAttribute1ID",
              "bannerAttribute2",
              "bannerAttribute3",
              "bannerAttribute4",
              "bannerAttribute5",
              "bannerBackup",
              "bannerClickInteractionCoordinateX",
              "bannerClickInteractionCoordinateY",
              "bannerDomain2Level",
              "bannerDomain3Level",
              "bannerFormat",
              "bannerFormatID",
              "bannerGlobalID",
              "bannerID",
              "bannerMember",
              "bannerSize",
              "bannerType",
              "bannerTypeID",
              "bannerWeight",
              "brandSafetyBlockedCategory",
              "brandSafetyProvider",
              "browser",
              "buyType",
              "buyTypeID",
              "campaign",
              "campaignBillingID",
              "campaignCurrency",
              "campaignEndDate",
              "campaignID",
              "campaignLabel1",
              "campaignLabel10",
              "campaignLabel11",
              "campaignLabel12",
              "campaignLabel13",
              "campaignLabel14",
              "campaignLabel15",
              "campaignLabel16",
              "campaignLabel17",
              "campaignLabel18",
              "campaignLabel19",
              "campaignLabel2",
              "campaignLabel20",
              "campaignLabel3",
              "campaignLabel4",
              "campaignLabel5",
              "campaignLabel6",
              "campaignLabel7",
              "campaignLabel8",
              "campaignLabel9",
              "campaignStartDate",
              "campaignType",
              "city",
              "clickDetail",
              "client",
              "clientID",
              "continent",
              "continentID",
              "cookiesEnabled",
              "country",
              "countryID",
              "date",
              "dateID",
              "dayMonth",
              "dcoProduct",
              "deal",
              "dealID",
              "deviceType",
              "event",
              "flashVersion",
              "frequencyCampaign",
              "frequencyLineItem",
              "hour",
              "industryVertical",
              "languageBrowser",
              "lineItem",
              "lineItemEndDate",
              "lineItemID",
              "lineItemLabel1",
              "lineItemLabel10",
              "lineItemLabel11",
              "lineItemLabel12",
              "lineItemLabel13",
              "lineItemLabel14",
              "lineItemLabel15",
              "lineItemLabel16",
              "lineItemLabel17",
              "lineItemLabel18",
              "lineItemLabel19",
              "lineItemLabel2",
              "lineItemLabel20",
              "lineItemLabel3",
              "lineItemLabel4",
              "lineItemLabel5",
              "lineItemLabel6",
              "lineItemLabel7",
              "lineItemLabel8",
              "lineItemLabel9",
              "lineItemNote",
              "lineItemStartDate",
              "lineItemAdGapID",
              "media",
              "mediaCountry",
              "mediaGlobal",
              "mediaGroup2",
              "mediaGroup3",
              "mediaGroup4",
              "mediaGroup5",
              "mediaID",
              "mediaLineItem",
              "mediaSection",
              "month",
              "monthID",
              "network",
              "networkID",
              "operatingSystem",
              "order",
              "orderID",
              "page",
              "pageID",
              "paidKeyword",
              "reactionTime",
              "referrerType",
              "region",
              "regionID",
              "rtbCategory",
              "rtbDomain",
              "rtbInventorySource",
              "rtbInventorySourceID",
              "rtbParentCategory",
              "rtbAudience",
              "screenResolution",
              "seAccount",
              "seDailyBudget",
              "sendingVariables",
              "sysvar1",
              "sysvar2",
              "sysvar3",
              "sysvar4",
              "sysvar5",
              "sysvar6",
              "sysvar7",
              "sysvarAge",
              "sysvarCountry",
              "sysvarCurrency",
              "sysvarGender",
              "sysvarProduct",
              "sysvarProductGroup",
              "sysvarProductID",
              "tag",
              "tagID",
              "tagUID",
              "viewabilityTime",
              "website",
              "websiteSection",
              "websiteSubsection",
              "week",
              "weekday",
              "weekdayID",
              "year",
              "yearID",
              "yearMonth",
              "yearWeek",
              "zip",
              "dmpDspDataProviderIds",
              "dmpDspDataProvider",
              "dmpDspSegmentIds",
              "dmpDspSegment",
              "dmpDspSegmentSource",
              "dmpRotatorsDataProviderIds",
              "dmpRotatorsDataProvider",
              "dmpRotatorsSegmentIds",
              "dmpRotatorsSegment",
              "dmpRotatorsSegmentSource",
              "crossDeviceDataProvider",
              "connectionType",
              "rtbAdPosition",
              "videoPlayerSize",
              "rtbLossReason",
              "dynamicAd",
              "dynamicAdVersion",
              "dynamicAdSetup",
              "dynamicAdCreativeShell",
              "contractType",
              "partnerID",
              "channelID",
              "environmentType",
              "videoPlacementType",
              "videoPosition"
            ],
            "type": "string",
            "title": "Dimension"
          },
          "title": "Dimensions",
          "maxItems": 8,
          "description": "List of report dimensions. Max 8. Note that some combinations of metrics and/or dimensions are not supported.",
          "propertyOrder": 20
        },
        "#api_secret": {
          "type": "string",
          "title": "API client secret",
          "format": "password",
          "propertyOrder": 1
        },
        "api_client_id": {
          "type": "string",
          "title": "API client ID",
          "propertyOrder": 2
        },
        "result_file_name": {
          "type": "string",
          "title": "Result table name",
          "default": "report-data",
          "description": "Result storage table name",
          "propertyOrder": 3
        },
        "incremental_output": {
          "enum": [0, 1],
          "type": "number",
          "title": "Load type",
          "default": 1,
          "options": { "enum_titles": ["Full Load", "Incremental Update"] },
          "description": "If set to Incremental update, the result tables will be updated based on primary key consisting of all selected dimensions. Full load overwrites the destination table each time, with no primary keys.",
          "propertyOrder": 4
        }
      }
    },
    "configurationRowSchema": null,
    "createConfigurationRowSchema": null,
    "configurationDescription": "**NOTE**: Updating an existing configuration may lead to different result structure which might cause \nStorage import to fail. It is recommended to drop existing tables after changing the report parameters.",
    "configurationFormat": "json",
    "emptyConfiguration": null,
    "emptyConfigurationRow": null,
    "actions": [],
    "fees": false,
    "limits": null,
    "logger": "gelf",
    "loggerConfiguration": {
      "verbosity": {
        "100": "none",
        "200": "normal",
        "250": "normal",
        "300": "normal",
        "400": "verbose",
        "500": "camouflage",
        "550": "camouflage",
        "600": "camouflage"
      },
      "gelf_server_type": "tcp"
    },
    "stagingStorageInput": "local",
    "stagingStorageOutput": "local",
    "isDeprecated": false,
    "expiredOn": null,
    "replacementApp": null,
    "isPublic": true,
    "isPublished": true,
    "publishedVersion": 136,
    "uri": "docker/kds-team.ex-adform-reports",
    "repository": {
      "type": "ecr",
      "uri": "147946154733.dkr.ecr.us-east-1.amazonaws.com/developer-portal-v2/kds-team.ex-adform-reports",
      "tag": "1.0.0",
      "options": {},
      "digest": "sha256:a206d335a480c14acbe8b97e6ccb78a45872ddf051017c333cb592b200dcfd3a"
    },
    "publishingStatus": "public",
    "icon": {
      "32": "https://ui.keboola-assets.com/developer-portal/icons/kds-team.ex-adform-reports/32/1576594169409.png",
      "64": "https://ui.keboola-assets.com/developer-portal/icons/kds-team.ex-adform-reports/64/1576594169409.png",
      "128": null
    }
  },
  {
    "id": "kds-team.ex-airtable",
    "vendor": {
      "id": "kds-team",
      "name": "KDS Team",
      "address": "Keboola Global\n(Vancouver, London, Prague, Chicago)",
      "email": "component.factory@keboola.com",
      "type": "keboola"
    },
    "version": 596,
    "name": "Airtable",
    "type": "extractor",
    "shortDescription": "Airtable is an easy to use, yet powerful database service that allows you to quickly create, organize and collaborate on\nany project.",
    "longDescription": "Airtable Data Source allows you to download data from Airtable Bases. It supports custom fields selection and filtering by\nformulas.",
    "licenseUrl": null,
    "documentationUrl": "https://help.keboola.com/components/extractors/other/airtable",
    "sourceCodeUrl": "https://bitbucket.org/kds_consulting_team/kds-team.ex-airtable/src/master/",
    "requiredMemory": null,
    "processTimeout": null,
    "features": [],
    "encryption": false,
    "network": "bridge",
    "defaultBucket": true,
    "defaultBucketStage": "in",
    "forwardToken": false,
    "forwardTokenDetails": false,
    "injectEnvironment": false,
    "complexity": null,
    "category": null,
    "categories": [],
    "dataTypeSupport": "none",
    "allowedProcessorPosition": "any",
    "cpuShares": null,
    "uiOptions": ["genericDockerUI", "genericDockerUI-rows"],
    "imageParameters": {},
    "stackParameters": {},
    "testConfiguration": null,
    "configurationSchema": {
      "type": "object",
      "title": "Airtable Credentials",
      "required": ["#api_key"],
      "properties": {
        "#api_key": {
          "type": "string",
          "title": "Personal Access Token (PAT)",
          "format": "password",
          "description": "A valid Airtable PAT token with required read only scopes (`data.records:read`, `schema.bases:read`). Learn more in the <a href=\"https://support.airtable.com/docs/creating-and-using-api-keys-and-access-tokens\">documentation</a<",
          "propertyOrder": 20
        },
        "test_connection": { "type": "button", "format": "test-connection" }
      }
    },
    "configurationRowSchema": {
      "type": "object",
      "title": "Row configuration",
      "required": ["base_id", "table_name"],
      "properties": {
        "fields": {
          "type": "array",
          "items": { "enum": [], "type": "string" },
          "title": "Fields",
          "format": "select",
          "options": {
            "async": {
              "label": "Re-load available columns",
              "action": "list_fields",
              "autoload": ["parameters.table_name"]
            }
          },
          "description": "The fields you want to download. You may leave this empty to download all fields. Note: in case od use_view even hidden fields will be retrieved.",
          "uniqueItems": true,
          "propertyOrder": 30
        },
        "base_id": {
          "enum": [],
          "type": "string",
          "title": "Base ID",
          "format": "select",
          "options": {
            "async": {
              "label": "Re-load available base ids",
              "action": "list_bases",
              "autoload": []
            }
          },
          "description": "The ID of the base you want to extract tables from.",
          "propertyOrder": 10
        },
        "use_view": {
          "type": "boolean",
          "title": "Use View",
          "format": "checkbox",
          "default": false,
          "description": "if checked - extraction is done from the view not the table itself",
          "propertyOrder": 24
        },
        "view_name": {
          "enum": [],
          "type": "string",
          "title": "View name",
          "format": "select",
          "options": {
            "async": {
              "label": "Re-load available views",
              "action": "list_views",
              "autoload": ["parameters.table_name"]
            },
            "dependencies": { "use_view": true }
          },
          "description": "The name of the view in Airtable base you want to download.",
          "propertyOrder": 25
        },
        "table_name": {
          "enum": [],
          "type": "string",
          "title": "Table name",
          "format": "select",
          "options": {
            "async": {
              "label": "Re-load available tables",
              "action": "list_tables",
              "autoload": ["parameters.base_id"]
            }
          },
          "description": "The name of the table in Airtable base you want to download.",
          "propertyOrder": 20
        },
        "destination": {
          "type": "object",
          "title": "Destination",
          "required": ["incremental_loading"],
          "properties": {
            "table_name": {
              "type": "string",
              "title": "Storage Table Name",
              "description": "Name of the destination table. Source table name will be used if not specified.",
              "propertyOrder": 10
            },
            "incremental_loading": {
              "enum": [false, true],
              "type": "boolean",
              "title": "Load Type",
              "default": false,
              "options": { "enum_titles": ["Full Load", "Incremental Load"] },
              "description": "If Full load is used, the destination table will be overwritten every run. If Incremental Load is used, data will be upserted into the destination table.",
              "propertyOrder": 20
            }
          },
          "propertyOrder": 70
        },
        "sync_options": {
          "type": "object",
          "title": "Sync Options",
          "properties": {
            "date_to": {
              "type": "string",
              "title": "Date to",
              "default": "now",
              "options": {
                "dependencies": { "sync_mode": "incremental_sync" }
              },
              "description": "Date to which data is downloaded. Either date in YYYY-MM-DD format or dateparser string i.e. 5 days ago, 1 month ago, now, etc.",
              "propertyOrder": 30
            },
            "date_from": {
              "type": "string",
              "title": "Date From",
              "default": "last run",
              "options": {
                "dependencies": { "sync_mode": "incremental_sync" }
              },
              "description": "Date from which data is downloaded. Either date in YYYY-MM-DD format or dateparser string i.e. 5 days ago, 1 month ago, yesterday, etc. You can also set this as last run, which will fetch data from the last run of the component.",
              "propertyOrder": 20
            },
            "sync_mode": {
              "enum": ["full_sync", "incremental_sync"],
              "type": "string",
              "title": "Sync Mode",
              "default": "full_sync",
              "options": { "enum_titles": ["Full Sync", "Incremental Sync"] },
              "required": true,
              "description": "Full Sync downloads all data from the source every run. Incremental Sync downloads data created or updated in a specified time range by field CREATED_TIME() or LAST_MODIFIED_TIME(), fields are described in <a href='https://support.airtable.com/docs/formula-field-reference'>Airtable - Formula field reference</a>.",
              "propertyOrder": 10
            }
          },
          "propertyOrder": 40
        }
      }
    },
    "createConfigurationRowSchema": null,
    "configurationDescription": "You must know your Airtable API key and ID of the base.\n\n- You can obtain the API key from your [Airtable account overview page](https://airtable.com/account). Since read only access is sufficient, we recommend you create a read only account and provide its API key. For instructions how to do that, see the [this Airtable support article](https://support.airtable.com/hc/en-us/articles/360056249614).\n- To obtain the base ID, open your base API documentation from the [Airtable API documentation list](https://airtable.com/api) and find the base ID in your base's API documentation.\n\nYou must also know the names of the tables in your Airtable base you want to extract. If you want to use filtering or download just a subset of the given table's fields (columns), you also need to provide the filter [formula](https://support.airtable.com/hc/en-us/articles/203255215-Formula-Field-Reference) and/or the names of the fields (columns) you want to download respectively.",
    "configurationFormat": "json",
    "emptyConfiguration": null,
    "emptyConfigurationRow": null,
    "actions": [
      "list_bases",
      "list_tables",
      "list_fields",
      "testConnection",
      "list_views"
    ],
    "fees": false,
    "limits": null,
    "logger": "gelf",
    "loggerConfiguration": {
      "verbosity": {
        "100": "normal",
        "200": "normal",
        "250": "normal",
        "300": "verbose",
        "400": "verbose",
        "500": "camouflage",
        "550": "camouflage",
        "600": "camouflage"
      },
      "gelf_server_type": "tcp"
    },
    "stagingStorageInput": "local",
    "stagingStorageOutput": "local",
    "isDeprecated": false,
    "expiredOn": null,
    "replacementApp": null,
    "isPublic": true,
    "isPublished": false,
    "publishedVersion": null,
    "uri": "docker/kds-team.ex-airtable",
    "repository": {
      "type": "ecr",
      "uri": "147946154733.dkr.ecr.us-east-1.amazonaws.com/developer-portal-v2/kds-team.ex-airtable",
      "tag": "1.2.0",
      "options": {},
      "digest": "sha256:f0a0b5d41834232158eefa5e48123fb0dc1749291c3008aa219fa360d67a72cd"
    },
    "publishingStatus": "public",
    "icon": {
      "32": "https://ui.keboola-assets.com/developer-portal/icons/kds-team.ex-airtable/32/1657100780964.png",
      "64": "https://ui.keboola-assets.com/developer-portal/icons/kds-team.ex-airtable/64/1657100780964.png",
      "128": null
    }
  },
  {
    "id": "keboola.ex-db-hive",
    "vendor": {
      "id": "keboola",
      "name": "Keboola :(){:|:&};: s.r.o.",
      "address": "Dělnická 191/27\nHolešovice\n170 00 Praha 7",
      "email": "support@keboola.com",
      "type": "keboola"
    },
    "version": 59,
    "name": "Apache Hive",
    "type": "extractor",
    "shortDescription": "The data warehouse software facilitates reading, writing, and managing large datasets residing in distributed storage using SQL.",
    "longDescription": "This component imports data from selected tables or results from arbitrary SQL queries from the [Apache Hive](https://hive.apache.org) database. It connects to the database, executes your queries, and stores the results in Keboola Connection Storage.\n\nTo configure this extractor, you need to \n\n- provide database credentials, and \n- have a connection to the database you want to read, preferably [secure](https://help.keboola.com/extractors/database/#connecting-to-database).\n\nIncremental load is optional.\n",
    "licenseUrl": "https://www.keboola.com/terms-and-conditions",
    "documentationUrl": "https://help.keboola.com/extractors/database/sqldb/",
    "sourceCodeUrl": "https://github.com/keboola/db-extractor-hive",
    "requiredMemory": "512m",
    "processTimeout": 10800,
    "features": [
      "container-root-user",
      "dev-branch-job-blocked",
      "has-simplified-ui"
    ],
    "encryption": false,
    "network": "bridge",
    "defaultBucket": false,
    "defaultBucketStage": "in",
    "forwardToken": true,
    "forwardTokenDetails": false,
    "injectEnvironment": false,
    "complexity": null,
    "category": null,
    "categories": ["Database"],
    "dataTypeSupport": "none",
    "allowedProcessorPosition": "any",
    "cpuShares": null,
    "uiOptions": ["genericDockerUI"],
    "imageParameters": {},
    "stackParameters": {},
    "testConfiguration": null,
    "configurationSchema": {},
    "configurationRowSchema": null,
    "createConfigurationRowSchema": null,
    "configurationDescription": null,
    "configurationFormat": "json",
    "emptyConfiguration": {},
    "emptyConfigurationRow": {},
    "actions": ["testConnection", "getTables"],
    "fees": false,
    "limits": null,
    "logger": "standard",
    "loggerConfiguration": null,
    "stagingStorageInput": "local",
    "stagingStorageOutput": "local",
    "isDeprecated": false,
    "expiredOn": null,
    "replacementApp": null,
    "isPublic": true,
    "isPublished": true,
    "publishedVersion": 59,
    "uri": "docker/keboola.ex-db-hive",
    "repository": {
      "type": "ecr",
      "uri": "147946154733.dkr.ecr.us-east-1.amazonaws.com/developer-portal-v2/keboola.ex-db-hive",
      "tag": "v3.0.2",
      "options": {},
      "digest": "sha256:793afe448a9c14d5c797476c20ae3d6a32460435bd579231cf863e4111602249"
    },
    "publishingStatus": "public",
    "icon": {
      "32": "https://ui.keboola-assets.com/developer-portal/icons/keboola.ex-db-hive/32/1674038966063.png",
      "64": "https://ui.keboola-assets.com/developer-portal/icons/keboola.ex-db-hive/64/1674038966063.png",
      "128": "https://ui.keboola-assets.com/developer-portal/icons/keboola.ex-db-hive/128/1674038966063.png"
    }
  }
]
